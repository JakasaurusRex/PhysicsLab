#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 28 13:49:08 2022

@author: jaket
"""
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from scipy import stats
import seaborn as sns
from scipy.optimize import curve_fit

def f(x, a, b):
    return b * x + a

def rms(y, yfit):
    return np.sqrt(np.sum((y-yfit)**2))


def lab8part1(fileName):
    df = pd.read_csv(fileName)  
    
    x = df.iloc[:10, :]["t (s)"].to_numpy()
    y = df.iloc[:10, :]["ln(A)"].to_numpy()
    err = df.iloc[:10, :]["err"].to_numpy()

    plt.scatter(x, y, color ="red")
    plt.errorbar(x, y, yerr=err, fmt="o", color="red")
    plt.xlabel("time (s)")
    plt.ylabel("ln(A)")
    
    popt2, pcov = curve_fit(f, x, y, [0.0, 0.0], err, absolute_sigma=True)
    perr = np.sqrt(np.diag(pcov))
    print(perr)
    yfit2 = f(x, *popt2)
    slope = float(round((yfit2[0]-yfit2[4])/(x[0]-x[4]), 3))
    intercept = float(round(yfit2[4] - (slope * x[4]), 3))
    label = f"C = 10uF Slope: {slope} Intercept: {intercept}"
    plt.plot(x, yfit2, label=label, color="red")
    plt.errorbar(x, yfit2, yerr=perr[0])
    plt.legend(loc="upper left")
    
    x = df.iloc[16:26, :]["t (s)"].to_numpy()
    y = df.iloc[16:26, :]["ln(A)"].to_numpy()
    err = df.iloc[16:26, :]["err"].to_numpy()

    plt.scatter(x, y, color = "blue")
    plt.errorbar(x, y, yerr=err, fmt="o", color="blue")
    plt.xlabel("time (s)")
    plt.ylabel("ln(A)")
    
    popt2, pcov = curve_fit(f, x, y, [0.0, 0.0], err, absolute_sigma=True)
    perr = np.sqrt(np.diag(pcov))
    print(perr)
    yfit2 = f(x, *popt2)
    slope = float(round((yfit2[0]-yfit2[4])/(x[0]-x[4]), 3))
    intercept = float(round(yfit2[4] - (slope * x[4]), 3))
    label = f"C = 20uF Slope: {slope} Intercept: {intercept}"
    plt.plot(x, yfit2, label=label, color="blue")
    plt.errorbar(x, yfit2, yerr=perr[0])
    plt.legend(loc="upper left")
    
    x = df.iloc[33:43, :]["t (s)"].to_numpy()
    y = df.iloc[33:43, :]["ln(A)"].to_numpy()
    err = df.iloc[33:43, :]["err"].to_numpy()

    plt.scatter(x, y, color = "green")
    plt.errorbar(x, y, yerr=err, fmt="o", color="green")
    plt.xlabel("time (s)")
    plt.ylabel("ln(A)")
    
    popt2, pcov = curve_fit(f, x, y, [0.0, 0.0], err, absolute_sigma=True)
    perr = np.sqrt(np.diag(pcov))
    print(perr)
    yfit2 = f(x, *popt2)
    slope = float(round((yfit2[0]-yfit2[4])/(x[0]-x[4]), 3))
    intercept = float(round(yfit2[4] - (slope * x[4]), 3))
    label = f"C = 30uF Slope: {slope} Intercept: {intercept}"
    plt.plot(x, yfit2, label=label, color="green")
    plt.errorbar(x, yfit2, yerr=perr[0])
    plt.legend(loc="upper right")